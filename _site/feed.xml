<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="de"><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" hreflang="de" /><updated>2019-04-11T16:47:35+07:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">&lt;b&gt;t&lt;/b&gt;ill&lt;b&gt;g&lt;/b&gt;artner.com</title><subtitle>Stuff from Till, like tech, ski, recipes...
</subtitle><author><name>Till Gartner</name></author><entry><title type="html">My static website - Work in progress</title><link href="http://0.0.0.0:4000/tech/2016/08/08/my-static-website.html" rel="alternate" type="text/html" title="My static website - Work in progress" /><published>2016-08-08T00:00:00+07:00</published><updated>2016-08-08T00:00:00+07:00</updated><id>http://0.0.0.0:4000/tech/2016/08/08/my-static-website</id><content type="html" xml:base="http://0.0.0.0:4000/tech/2016/08/08/my-static-website.html">&lt;p&gt;OK, everytbody does it, even I do it: Static websites. It’s fast, it’s safe, it does the computing where it belongs (as long as you don’t need fancy customization, why should a server think about what the page looks like at read time?). This very site is static (built with &lt;a href=&quot;http://jbake.org/&quot;&gt;JBake&lt;/a&gt; and hosted on &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;). It was fun setting it up, it works great - but I couldn’t explain my mother how to use it or how to publish some content on it. And that’s what a CMs should be about: It has to be usable in the first place.&lt;/p&gt;

&lt;p&gt;Therefore I need anotrher setup. I plan to have a look at some different static web site systems, and set up a list of criteria against which I plan to test the different generators…&lt;/p&gt;

&lt;h2 id=&quot;criteria&quot;&gt;Criteria&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Themes
    &lt;ul&gt;
      &lt;li&gt;Many&lt;/li&gt;
      &lt;li&gt;Beautiful&lt;/li&gt;
      &lt;li&gt;Responsive&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Easy to write
    &lt;ul&gt;
      &lt;li&gt;Editor with preview&lt;/li&gt;
      &lt;li&gt;Easy handling and referencing of pics&lt;/li&gt;
      &lt;li&gt;Pictures in preview&lt;/li&gt;
      &lt;li&gt;Videos&lt;/li&gt;
      &lt;li&gt;Tables&lt;/li&gt;
      &lt;li&gt;Code with syntax highlighting&lt;/li&gt;
      &lt;li&gt;Automated checking of consistency, i.e. the generated website is correct, complete, the pointers don’t point to Nirwana…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Being able to create an &lt;a href=&quot;https://www.ampproject.org/&quot;&gt;Accelerated Mobile Page&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Functional features &amp;amp; pages
    &lt;ul&gt;
      &lt;li&gt;Tags, tag pages, tag cloud (could also be an extension)&lt;/li&gt;
      &lt;li&gt;Publishable on Github (it’s very fast, free and reliable)&lt;/li&gt;
      &lt;li&gt;Make website private. i.e. accessible only for registered members&lt;/li&gt;
      &lt;li&gt;Publish by email&lt;/li&gt;
      &lt;li&gt;Comment by email&lt;/li&gt;
      &lt;li&gt;Push news to registered users by email&lt;/li&gt;
      &lt;li&gt;Resize pics for fast delivery&lt;/li&gt;
      &lt;li&gt;Easy to create new themes, Themes should be just CSS&lt;/li&gt;
      &lt;li&gt;Based on other HTML, i.e. Bootstrap themes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Extensible architecture
    &lt;ul&gt;
      &lt;li&gt;Can add stuff, i.e. Picture resizing process&lt;/li&gt;
      &lt;li&gt;At least a programming language I know a bit - or that I am curious to learn (that basically boils it down to Java and JavaScript)&lt;/li&gt;
      &lt;li&gt;The generated HTML should be as simple as possible. All formatting sits in the CSS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;generators&quot;&gt;Generators&lt;/h2&gt;

&lt;p&gt;When scanning the literature (and Github). this is the list of generators rthat I should probably have a look at:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jekyll - Done&lt;/li&gt;
  &lt;li&gt;Harp JS - Done&lt;/li&gt;
  &lt;li&gt;Hugo - Done&lt;/li&gt;
  &lt;li&gt;Metalsmith - Done&lt;/li&gt;
  &lt;li&gt;Nikola - Done&lt;/li&gt;
  &lt;li&gt;Octopress - Done&lt;/li&gt;
  &lt;li&gt;Hexo - Done&lt;/li&gt;
  &lt;li&gt;Hyde - Done&lt;/li&gt;
  &lt;li&gt;Pelican- Done&lt;/li&gt;
  &lt;li&gt;Nanoc - Done&lt;/li&gt;
  &lt;li&gt;Middleman - Done&lt;/li&gt;
  &lt;li&gt;Lektor - Done&lt;/li&gt;
  &lt;li&gt;Gatsby - Done&lt;/li&gt;
  &lt;li&gt;Expose - Done&lt;/li&gt;
  &lt;li&gt;Wintersmith - Done&lt;/li&gt;
  &lt;li&gt;Doc pad - Done&lt;/li&gt;
  &lt;li&gt;kirby - Done&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;evaluation-matrix&quot;&gt;Evaluation Matrix&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Generator&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Programming language&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Themes&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Formats&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Ruby –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Lots ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown, Textile, Liquid ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://harpjs.com/&quot;&gt;Harp JS&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NodeJS  ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Some 00&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown, EJS, Jade, LESS, Stylus… ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;GO –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Some 00&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown, asciidoc, reStructure ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;em&gt;&lt;a href=&quot;http://www.metalsmith.io/&quot;&gt;Metalsmith&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Node JS –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Looks very flexible. Also see http://dbushell.com/2015/05/11/wordpress-to-metalsmith/&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://getnikola.com/&quot;&gt;Nikola&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Python –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Few –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;reStructuredText, Markdown,&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Looks just so so…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;http://octopress.org/&quot;&gt;Octopress&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Python –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Some 00&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Is just a package around Jekyll.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Node JS ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Some 00&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown, different flavors, Jekyll Plugins ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Looks very flexible, uses standard template engines (EJS, Jade, Swig…), allows to integrate scripts and plugins. ++&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;http://hyde.github.io/&quot;&gt;Hyde&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Python –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Little –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;http://blog.getpelican.com/&quot;&gt;Pelican&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Python –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;http://nanoc.ws/&quot;&gt;Nanoc&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Ruby –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://middlemanapp.com/&quot;&gt;Moddleman&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Python –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://www.getlektor.com/&quot;&gt;Lektor&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Python –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby&quot;&gt;Gatsby&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Node JS, React&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;No –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown 00&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Looks very flexible, but pretty complex…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://github.com/Jack000/Expose&quot;&gt;Expose&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Shell scripts –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown and picture folders&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Specifically for picture sites.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;em&gt;&lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Node JS, CoffeeScript ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Little –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown, Jade, …&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Looks very flexible, LESS, Sass, Stylus. Might be a bit complex…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;http://docpad.org/&quot;&gt;DocPad&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Node JS ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;No –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown and others ++&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Looks flexible but complex&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://getkirby.com/&quot;&gt;kirby&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;PHP –&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Markdown&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As a result I should have a closer look at &lt;em&gt;&lt;a href=&quot;https://harpjs.com/&quot;&gt;Harp JS&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&quot;http://www.metalsmith.io/&quot;&gt;Metalsmith&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;After quickly reading thru the websites of the above tools I decided to give it a try with &lt;em&gt;&lt;a href=&quot;http://www.metalsmith.io/&quot;&gt;Metalsmith&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;editors&quot;&gt;Editors&lt;/h2&gt;

&lt;p&gt;When you think of a static site generation from a base of Markdown files, it quickly becomes natural to look for a good editor. What we want from our editor:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Preview Markdown&lt;/li&gt;
  &lt;li&gt;Preview including the CSS and other transformations that our site generator uses - to make sure we see the same result as it will be displayed in production&lt;/li&gt;
  &lt;li&gt;Preview including images. This might be non trivial since the images might be located on a different path in DEV as in PROD…
 Overa ll this means the editor must launch a compilation / composition process that produces the web view every time the Markdown source has been modified.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Editor we look at&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Editor&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Markdown / HTML Preview&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Comments&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Visual Code&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;?&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Might have something suitable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Atom&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Brackets&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://caret.io/&quot;&gt;Caret.io&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://ia.net/writer&quot;&gt;IA Writer&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Claims so…&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;… probably some more…&lt;/p&gt;

&lt;h1 id=&quot;history&quot;&gt;History&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;August 2016: Started this page&lt;/li&gt;
  &lt;li&gt;Jan 2017: Continued while being in Thailand with the family, Tomi &amp;amp; Beate&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Till Gartner</name></author><category term="tech" /><category term="tech" /><summary type="html">OK, everytbody does it, even I do it: Static websites. It’s fast, it’s safe, it does the computing where it belongs (as long as you don’t need fancy customization, why should a server think about what the page looks like at read time?). This very site is static (built with JBake and hosted on Github). It was fun setting it up, it works great - but I couldn’t explain my mother how to use it or how to publish some content on it. And that’s what a CMs should be about: It has to be usable in the first place. Therefore I need anotrher setup. I plan to have a look at some different static web site systems, and set up a list of criteria against which I plan to test the different generators… Criteria Themes Many Beautiful Responsive Easy to write Editor with preview Easy handling and referencing of pics Pictures in preview Videos Tables Code with syntax highlighting Automated checking of consistency, i.e. the generated website is correct, complete, the pointers don’t point to Nirwana… Being able to create an Accelerated Mobile Page Functional features &amp;amp; pages Tags, tag pages, tag cloud (could also be an extension) Publishable on Github (it’s very fast, free and reliable) Make website private. i.e. accessible only for registered members Publish by email Comment by email Push news to registered users by email Resize pics for fast delivery Easy to create new themes, Themes should be just CSS Based on other HTML, i.e. Bootstrap themes Extensible architecture Can add stuff, i.e. Picture resizing process At least a programming language I know a bit - or that I am curious to learn (that basically boils it down to Java and JavaScript) The generated HTML should be as simple as possible. All formatting sits in the CSS Generators When scanning the literature (and Github). this is the list of generators rthat I should probably have a look at: Jekyll - Done Harp JS - Done Hugo - Done Metalsmith - Done Nikola - Done Octopress - Done Hexo - Done Hyde - Done Pelican- Done Nanoc - Done Middleman - Done Lektor - Done Gatsby - Done Expose - Done Wintersmith - Done Doc pad - Done kirby - Done Evaluation Matrix Generator Programming language Themes Formats Comment Jekyll Ruby – Lots ++ Markdown, Textile, Liquid ++   Harp JS NodeJS ++ Some 00 Markdown, EJS, Jade, LESS, Stylus… ++   Hugo GO – Some 00 Markdown, asciidoc, reStructure ++   Metalsmith Node JS –     Looks very flexible. Also see http://dbushell.com/2015/05/11/wordpress-to-metalsmith/ Nikola Python – Few – reStructuredText, Markdown, Looks just so so… Octopress Python – Some 00   Is just a package around Jekyll. Hexo Node JS ++ Some 00 Markdown, different flavors, Jekyll Plugins ++ Looks very flexible, uses standard template engines (EJS, Jade, Swig…), allows to integrate scripts and plugins. ++ Hyde Python – Little –     Pelican Python –       Nanoc Ruby –       Moddleman Python –       Lektor Python –       Gatsby Node JS, React No – Markdown 00 Looks very flexible, but pretty complex… Expose Shell scripts –   Markdown and picture folders Specifically for picture sites. Wintersmith Node JS, CoffeeScript ++ Little – Markdown, Jade, … Looks very flexible, LESS, Sass, Stylus. Might be a bit complex… DocPad Node JS ++ No – Markdown and others ++ Looks flexible but complex kirby PHP –   Markdown   As a result I should have a closer look at Harp JS, Metalsmith, Hexo and Wintersmith. After quickly reading thru the websites of the above tools I decided to give it a try with Metalsmith. Editors When you think of a static site generation from a base of Markdown files, it quickly becomes natural to look for a good editor. What we want from our editor: Preview Markdown Preview including the CSS and other transformations that our site generator uses - to make sure we see the same result as it will be displayed in production Preview including images. This might be non trivial since the images might be located on a different path in DEV as in PROD… Overa ll this means the editor must launch a compilation / composition process that produces the web view every time the Markdown source has been modified. Editor we look at Editor Markdown / HTML Preview Comments Visual Code ? Might have something suitable Atom     Brackets     Caret.io     IA Writer Claims so…   … probably some more… History August 2016: Started this page Jan 2017: Continued while being in Thailand with the family, Tomi &amp;amp; Beate</summary></entry><entry><title type="html">Music notes</title><link href="http://0.0.0.0:4000/2016/04/02/noten.html" rel="alternate" type="text/html" title="Music notes" /><published>2016-04-02T00:00:00+07:00</published><updated>2016-04-02T00:00:00+07:00</updated><id>http://0.0.0.0:4000/2016/04/02/noten</id><content type="html" xml:base="http://0.0.0.0:4000/2016/04/02/noten.html">&lt;p&gt;Since Lili needs notes from time to time, I collect them here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/musicnotes/passenger-let_her_go.pdf&quot;&gt;Passenger, Let her go &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/musicnotes/bluestone_alley.pdf&quot;&gt;Bluestone Alley, by Congfei Wei for Piano Tiles 2 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Lyrische Stücke von Edward Grieg: Fritz’ Lieblingsstücke als er noch Klavier spielte.
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.wikiwand.com/en/Lyric_Pieces&quot;&gt;Eine Übersicht&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_I.pdf&quot;&gt;Book I, Op. 12 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Book II, Op. 38&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_III.pdf&quot;&gt;Book III, Op. 43 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_IV.pdf&quot;&gt;Book IV, Op. 47 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Book V, Op. 54&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_VI.pdf&quot;&gt;Book VI, Op. 57 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_VII.pdf&quot;&gt;Book VII, Op. 62 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_VIII.pdf&quot;&gt;Book VIII, Op. 65 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_IX.pdf&quot;&gt;Book IX, Op. 68 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/musicnotes/Grieg-Lyric_Pieces-Book_X.pdf&quot;&gt;Book X, Op. 71 &lt;img src=&quot;/img/musicnotes.jpg&quot; alt=&quot;Music&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Till Gartner</name></author><summary type="html">Since Lili needs notes from time to time, I collect them here: Passenger, Let her go Bluestone Alley, by Congfei Wei for Piano Tiles 2 Lyrische Stücke von Edward Grieg: Fritz’ Lieblingsstücke als er noch Klavier spielte. Eine Übersicht Book I, Op. 12 Book II, Op. 38 Book III, Op. 43 Book IV, Op. 47 Book V, Op. 54 Book VI, Op. 57 Book VII, Op. 62 Book VIII, Op. 65 Book IX, Op. 68 Book X, Op. 71</summary></entry><entry><title type="html">Playing around with D3</title><link href="http://0.0.0.0:4000/tech/2016/02/13/d3playground.html" rel="alternate" type="text/html" title="Playing around with D3" /><published>2016-02-13T00:00:00+07:00</published><updated>2016-02-13T00:00:00+07:00</updated><id>http://0.0.0.0:4000/tech/2016/02/13/d3playground</id><content type="html" xml:base="http://0.0.0.0:4000/tech/2016/02/13/d3playground.html">&lt;p&gt;During my holiday week I played around with &lt;a href=&quot;https://d3js.org/&quot;&gt;D3 js&lt;/a&gt;. I was fascinated by D3 since the first time I saw it, but I never had time to really play with it. Now I did - a little bit…&lt;/p&gt;

&lt;p&gt;My sample data was the number of kilometers I drove with my Vespa in Đà Nẵng over time. I tracked this data by making a &lt;em&gt;screen shot&lt;/em&gt; of my km counter from time to time. So I just flipped thru my photo gallery and looked for pictures of my tachometer. I entered the data in a &lt;a href=&quot;http://tillgartner.com/playgroundd3/vespa.tsv&quot;&gt;plain text file&lt;/a&gt;. The I followed some tutorials and tinkered around until I got a curve the way I wanted it.&lt;/p&gt;

&lt;p&gt;See my final page &lt;a href=&quot;http://tillgartner.com/playgroundd3/sample2.html&quot;&gt;here&lt;/a&gt; and the way on how I got there &lt;a href=&quot;http://tillgartner.com/playgroundd3/index.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Till Gartner</name></author><category term="[&quot;tech&quot;]" /><category term="tech" /><category term="JavaScript" /><summary type="html">During my holiday week I played around with D3 js. I was fascinated by D3 since the first time I saw it, but I never had time to really play with it. Now I did - a little bit… My sample data was the number of kilometers I drove with my Vespa in Đà Nẵng over time. I tracked this data by making a screen shot of my km counter from time to time. So I just flipped thru my photo gallery and looked for pictures of my tachometer. I entered the data in a plain text file. The I followed some tutorials and tinkered around until I got a curve the way I wanted it. See my final page here and the way on how I got there here.</summary></entry><entry><title type="html">The Art of Command Line</title><link href="http://0.0.0.0:4000/2016/01/26/command-line.html" rel="alternate" type="text/html" title="The Art of Command Line" /><published>2016-01-26T00:00:00+07:00</published><updated>2016-01-26T00:00:00+07:00</updated><id>http://0.0.0.0:4000/2016/01/26/command-line</id><content type="html" xml:base="http://0.0.0.0:4000/2016/01/26/command-line.html">&lt;p&gt;A really helpful resource I found yesterday:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jlevy/the-art-of-command-line/blob/master/README.md&quot;&gt;The Art of Command Line&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not only does it list tips that you often need, but it also gives you hints and advices on how you should work, what you should read, what you should learn (indicating a certain order).&lt;/p&gt;

&lt;p&gt;For an occasional command liner like me that’s great!&lt;/p&gt;</content><author><name>Till Gartner</name></author><category term="tech" /><summary type="html">A really helpful resource I found yesterday: The Art of Command Line Not only does it list tips that you often need, but it also gives you hints and advices on how you should work, what you should read, what you should learn (indicating a certain order). For an occasional command liner like me that’s great!</summary></entry><entry><title type="html">Ping Visualization and Analysis</title><link href="http://0.0.0.0:4000/tech/2016/01/08/ping-analysis.html" rel="alternate" type="text/html" title="Ping Visualization and Analysis" /><published>2016-01-08T00:00:00+07:00</published><updated>2016-01-08T00:00:00+07:00</updated><id>http://0.0.0.0:4000/tech/2016/01/08/ping-analysis</id><content type="html" xml:base="http://0.0.0.0:4000/tech/2016/01/08/ping-analysis.html">&lt;p&gt;So this is the situation I am facing: I use an internet access that doesn’t feel reliable. Sometimes it’s really fast, sometimes it just feels being very unreliable. And I never know what part exactly is just failing: Is the the application that is slow, is it the WIFI, is it the Internet access.&lt;/p&gt;

&lt;p&gt;So want I have been looking for is a reliable, long-term measurement of internet access speed. By speed I mean mainly round-trip time / latency. I looked at many tools, large ones (the ones that come from complete eco systems like Nagios or ecinga) small one (i.e. network usage tracking directly on your PC or Mac). The big ones are too much work and too much stuff that needs to be learned, understood, installed. The small ones don’t answer my question since they don’t do long term tracking and recording. And I don’t like complex stuff.&lt;/p&gt;

&lt;p&gt;Then found something that is in the essence exactly what I have been looking for. Re-phrtase: If I would have started putting something together myself, this is what I would have built: It’s called &lt;a href=&quot;http://www.medienvilla.com/index.php?id=231&quot;&gt;Ping Visualization and Analysis&lt;/a&gt; and it is based on 2 components;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;One simple script that logs ping times (and by simple I mean &lt;em&gt;realy simple!&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;One HTML page with some JavaScript that visualizes the ping times over time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can let the ping-logger run on stupid simple hardware. It can run day &amp;amp; night, gathering data. The format is &lt;em&gt;plain&lt;/em&gt;. A sample:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;Fri Jan  8 15:14:49 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=89 ttl=53 time=310.716 ms
Fri Jan  8 15:14:54 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=90 ttl=53 time=310.349 ms
Fri Jan  8 15:14:59 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=91 ttl=53 time=312.787 ms
Fri Jan  8 15:15:04 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=92 ttl=53 time=312.805 ms
Fri Jan  8 15:15:09 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=93 ttl=53 time=311.273 ms
Fri Jan  8 15:15:14 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=94 ttl=53 time=311.371 ms
Fri Jan  8 15:15:19 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=95 ttl=53 time=312.096 ms
Fri Jan  8 15:15:24 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=96 ttl=53 time=313.387 ms
Fri Jan  8 15:15:29 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=97 ttl=53 time=310.404 ms
Fri Jan  8 15:15:34 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=98 ttl=53 time=311.076 ms
Fri Jan  8 15:15:39 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=99 ttl=53 time=312.640 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pretty simple, uh?! A simple &lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt; with a timestamp in front. And the JS stuff reads it and makes a simple graph from it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2016-01/ping.png&quot; alt=&quot;graph&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I just had to fix some small things to make it run on my Mac (the &lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt; syntax was from another Unix slang).&lt;/p&gt;

&lt;p&gt;##What next?
So here is what I plan to improve (let’s see wether this really happens):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Have the Sources GITted&lt;/li&gt;
  &lt;li&gt;Improve the graph:
    &lt;ul&gt;
      &lt;li&gt;The colors are a bit strange to me…&lt;/li&gt;
      &lt;li&gt;It feels upside down&lt;/li&gt;
      &lt;li&gt;Have labels on the y axis&lt;/li&gt;
      &lt;li&gt;May be have them more &lt;a href=&quot;http://pinglogger.co.uk/index.php/screenshots/&quot;&gt;like so&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;May be look into &lt;a href=&quot;https://www.elastic.co/products/logstash&quot;&gt;log stash&lt;/a&gt; as visualization…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##Addendum
Also within the context, and because &lt;a href=&quot;http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html&quot;&gt;Java is the development language of the year 2015&lt;/a&gt;: &lt;a href=&quot;http://pastebin.com/1qnCXDw7&quot;&gt;A java program to track the ping times to multiple end points&lt;/a&gt;&lt;/p&gt;</content><author><name>Till Gartner</name></author><category term="[&quot;tech&quot;]" /><summary type="html">So this is the situation I am facing: I use an internet access that doesn’t feel reliable. Sometimes it’s really fast, sometimes it just feels being very unreliable. And I never know what part exactly is just failing: Is the the application that is slow, is it the WIFI, is it the Internet access. So want I have been looking for is a reliable, long-term measurement of internet access speed. By speed I mean mainly round-trip time / latency. I looked at many tools, large ones (the ones that come from complete eco systems like Nagios or ecinga) small one (i.e. network usage tracking directly on your PC or Mac). The big ones are too much work and too much stuff that needs to be learned, understood, installed. The small ones don’t answer my question since they don’t do long term tracking and recording. And I don’t like complex stuff. Then found something that is in the essence exactly what I have been looking for. Re-phrtase: If I would have started putting something together myself, this is what I would have built: It’s called Ping Visualization and Analysis and it is based on 2 components; One simple script that logs ping times (and by simple I mean realy simple!) One HTML page with some JavaScript that visualizes the ping times over time. You can let the ping-logger run on stupid simple hardware. It can run day &amp;amp; night, gathering data. The format is plain. A sample: Fri Jan 8 15:14:49 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=89 ttl=53 time=310.716 ms Fri Jan 8 15:14:54 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=90 ttl=53 time=310.349 ms Fri Jan 8 15:14:59 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=91 ttl=53 time=312.787 ms Fri Jan 8 15:15:04 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=92 ttl=53 time=312.805 ms Fri Jan 8 15:15:09 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=93 ttl=53 time=311.273 ms Fri Jan 8 15:15:14 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=94 ttl=53 time=311.371 ms Fri Jan 8 15:15:19 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=95 ttl=53 time=312.096 ms Fri Jan 8 15:15:24 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=96 ttl=53 time=313.387 ms Fri Jan 8 15:15:29 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=97 ttl=53 time=310.404 ms Fri Jan 8 15:15:34 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=98 ttl=53 time=311.076 ms Fri Jan 8 15:15:39 ICT 2016: 64 bytes from 185.40.248.50: icmp_seq=99 ttl=53 time=312.640 ms Pretty simple, uh?! A simple ping with a timestamp in front. And the JS stuff reads it and makes a simple graph from it: I just had to fix some small things to make it run on my Mac (the ping syntax was from another Unix slang). ##What next? So here is what I plan to improve (let’s see wether this really happens): Have the Sources GITted Improve the graph: The colors are a bit strange to me… It feels upside down Have labels on the y axis May be have them more like so May be look into log stash as visualization… ##Addendum Also within the context, and because Java is the development language of the year 2015: A java program to track the ping times to multiple end points</summary></entry><entry><title type="html">sociolog - Your trail across social media</title><link href="http://0.0.0.0:4000/2016/01/04/23-sociolog-software.html" rel="alternate" type="text/html" title="sociolog - Your trail across social media" /><published>2016-01-04T00:00:00+07:00</published><updated>2016-01-04T00:00:00+07:00</updated><id>http://0.0.0.0:4000/2016/01/04/23-sociolog-software</id><content type="html" xml:base="http://0.0.0.0:4000/2016/01/04/23-sociolog-software.html">&lt;p&gt;I write or blog in different media:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Twitter&lt;/li&gt;
  &lt;li&gt;Facebook&lt;/li&gt;
  &lt;li&gt;A private blog with restricted access (because it contains family pictures)&lt;/li&gt;
  &lt;li&gt;This &lt;a href=&quot;http://tillgartner.com&quot;&gt;blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From time to time I find it nice to scroll through my past. I do this most often on our family blog, because it contains the most interesting content and because it is easy to scroll through. I would like to be able to scroll through all my past across all media.&lt;/p&gt;

&lt;p&gt;So this is what my software should do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Collect all entries I wrote in the social media:
    &lt;ul&gt;
      &lt;li&gt;Twitter&lt;/li&gt;
      &lt;li&gt;Facebook&lt;/li&gt;
      &lt;li&gt;Wordpress&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Create one document per entry in a Github Repo&lt;/li&gt;
  &lt;li&gt;Handle properly duplicate content: Since some years my Twitter account is &lt;em&gt;linked&lt;/em&gt; to my Facebook account in that Twitter entries are replicated to Facebook. That’s because I have people that I consider &lt;em&gt;audience&lt;/em&gt; in both media.&lt;/li&gt;
  &lt;li&gt;Collect also the feedback to my posts&lt;/li&gt;
  &lt;li&gt;Nicely display them in a static way, including overview pages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some technical thoughts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I would write it in java because that’s what I know best&lt;/li&gt;
  &lt;li&gt;Would be a headless program i.e. no UI&lt;/li&gt;
  &lt;li&gt;Input should be the date of the last recorded social media entry&lt;/li&gt;
  &lt;li&gt;It collects all the entries (including the comments to it) on the different social media channels since that date&lt;/li&gt;
  &lt;li&gt;It dedupes them (i.e. merges the ones that are the same or replicates of one another on different channels)&lt;/li&gt;
  &lt;li&gt;It creates one document / file per social media entry and writes them in an output directory&lt;/li&gt;
  &lt;li&gt;This directory is then replicated / added to a github account&lt;/li&gt;
  &lt;li&gt;Social media entry documents would be named like &lt;code class=&quot;highlighter-rouge&quot;&gt;2015-12-03-The_title_of_what_ I_wrote-TWITTER.json&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;There would be a &lt;em&gt;header file&lt;/em&gt; with a fixed name, i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;sociologs.json&lt;/code&gt;. This file would hold the first 20 logs and point to a file with the next logs.&lt;/li&gt;
  &lt;li&gt;The domain &lt;code class=&quot;highlighter-rouge&quot;&gt;sociolog.io&lt;/code&gt; would be &lt;a href=&quot;https://www.godaddy.com/domains/searchresults.aspx?&amp;amp;checkAvail=1&amp;amp;domainToCheck=sociolog.io&quot;&gt;available&lt;/a&gt; - as of today, Jan 4 2016.&lt;/li&gt;
  &lt;li&gt;The generated &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; would load the data via JS/AJAX requests and continue loading while the user scrolls down&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If anyone is interested, or has comment, please get in touch at till&lt;code class=&quot;highlighter-rouge&quot;&gt;dot&lt;/code&gt;gartner&lt;code class=&quot;highlighter-rouge&quot;&gt;at&lt;/code&gt;gmail&lt;code class=&quot;highlighter-rouge&quot;&gt;dot&lt;/code&gt;com.&lt;/p&gt;</content><author><name>Till Gartner</name></author><category term="SoftwareWeNeed" /><summary type="html">I write or blog in different media: Twitter Facebook A private blog with restricted access (because it contains family pictures) This blog From time to time I find it nice to scroll through my past. I do this most often on our family blog, because it contains the most interesting content and because it is easy to scroll through. I would like to be able to scroll through all my past across all media. So this is what my software should do: Collect all entries I wrote in the social media: Twitter Facebook Wordpress Create one document per entry in a Github Repo Handle properly duplicate content: Since some years my Twitter account is linked to my Facebook account in that Twitter entries are replicated to Facebook. That’s because I have people that I consider audience in both media. Collect also the feedback to my posts Nicely display them in a static way, including overview pages Some technical thoughts: I would write it in java because that’s what I know best Would be a headless program i.e. no UI Input should be the date of the last recorded social media entry It collects all the entries (including the comments to it) on the different social media channels since that date It dedupes them (i.e. merges the ones that are the same or replicates of one another on different channels) It creates one document / file per social media entry and writes them in an output directory This directory is then replicated / added to a github account Social media entry documents would be named like 2015-12-03-The_title_of_what_ I_wrote-TWITTER.json There would be a header file with a fixed name, i.e. sociologs.json. This file would hold the first 20 logs and point to a file with the next logs. The domain sociolog.io would be available - as of today, Jan 4 2016. The generated index.html would load the data via JS/AJAX requests and continue loading while the user scrolls down If anyone is interested, or has comment, please get in touch at tilldotgartneratgmaildotcom.</summary></entry><entry><title type="html">Visited countries</title><link href="http://0.0.0.0:4000/2016/01/04/10-visited-countries.html" rel="alternate" type="text/html" title="Visited countries" /><published>2016-01-04T00:00:00+07:00</published><updated>2016-01-04T00:00:00+07:00</updated><id>http://0.0.0.0:4000/2016/01/04/10-visited-countries</id><content type="html" xml:base="http://0.0.0.0:4000/2016/01/04/10-visited-countries.html">&lt;p&gt;A nice tool to play around - because it’s nice to see where you’ve been and because it’s a nice piece of JS:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://map1.maploco.com/visited-countries/mine.php?c1=mtlev1d7dk-b5fytqed5e-b3op0x9h4w-jefemlierk-2scxhcxdvo&quot;&gt;&amp;lt;img src=”http://map1.maploco.com/visited-countries/ml/mtlev1d7dk-b5fytqed5e-b3op0x9h4w-jefemlierk-2scxhcxdvo.gif” border=0&amp;gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>Till Gartner</name></author><category term="tech" /><summary type="html">A nice tool to play around - because it’s nice to see where you’ve been and because it’s a nice piece of JS: &amp;lt;img src=”http://map1.maploco.com/visited-countries/ml/mtlev1d7dk-b5fytqed5e-b3op0x9h4w-jefemlierk-2scxhcxdvo.gif” border=0&amp;gt;</summary></entry><entry><title type="html">SiteWeightWatcher - keeps your website slim</title><link href="http://0.0.0.0:4000/2015/12/27/siteweightwatcher.html" rel="alternate" type="text/html" title="SiteWeightWatcher - keeps your website slim" /><published>2015-12-27T00:00:00+07:00</published><updated>2015-12-27T00:00:00+07:00</updated><id>http://0.0.0.0:4000/2015/12/27/siteweightwatcher</id><content type="html" xml:base="http://0.0.0.0:4000/2015/12/27/siteweightwatcher.html">&lt;p&gt;Good software developers test their stuff. And the &lt;a href=&quot;https://www.wikiwand.com/en/Test-driven_development&quot;&gt;TDD (Test Driven Development)&lt;/a&gt; addicts are maniacs when it comes to testing. Those guys usually think in code, be it Java, Python, nodeJS, you name it. TDD means you write tests first, then you code just as much as it takes to let the tests become green. Then you rework your code and only then you start writing tests for new requirements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-12/tdd.png&quot; alt=&quot;TDD cycle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is &lt;strong&gt;very&lt;/strong&gt; testy. My opinion is that if you do it the way it’s written and described in the books you become awfully slow and it turns into nonsense. But that’s another discussion, and not one I want to sort out here…&lt;/p&gt;

&lt;p&gt;What’s missing with most of the test approaches I have seen in the past are the following two things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The test guys and test tools stop monitoring the software or website once it went into production. Somehow they feel that their responsibility ends with the going live…&lt;/li&gt;
  &lt;li&gt;They test the software. Not the rest, I.e. The design, the HTML, the CSS etc. And the user experience, the feeling wether what I see, touch, browse navigate is of good quality, is very much influenced by this packaging of the software logic.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So I am looking for a tool to test (web based) software once it’s out in the wild and throughout the entire user experience. Imagine a website, a simple blog. It might be perfect when it got launched, but over time it just degrades: the designers have added so many bells and whistles, the volume of the content has grown, it was tweaked to be more useable on mobiles… And eventually the site is bloated, heavy and slow. Why do I have to wait for my users to tell me (that would be complaining)?&lt;/p&gt;

&lt;p&gt;At &lt;a href=&quot;http://mgm-tp.com&quot;&gt;mgm technology partners&lt;/a&gt; we have automated test suites that run every night. So developers that built in code that slows down the software have a report that tells them every morning in their inbox.&lt;/p&gt;

&lt;p&gt;So here is what my SiteWeightWatcher should do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run tests every 5-30 minutes against the production site&lt;/li&gt;
  &lt;li&gt;Check all the pages, not just index.html&lt;/li&gt;
  &lt;li&gt;Report immediately when pages become slow (that would be slower than they used to be)&lt;/li&gt;
  &lt;li&gt;Track key figures and how they evolve over time:
    &lt;ul&gt;
      &lt;li&gt;How much data is transferred for each page?&lt;/li&gt;
      &lt;li&gt;How many requests are going back &amp;amp; forth?&lt;/li&gt;
      &lt;li&gt;How much time does it take searching for products? Over time…&lt;/li&gt;
      &lt;li&gt;How well connected is the site for users in Germany, UK, US or Asia? Over time, because those things change without us having done anything.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I could imagine a dashboard for an online shop like &lt;a href=&quot;http://kickz.com&quot;&gt;KICKZ.com&lt;/a&gt; to look may this way:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-12/kickz_dashboard.png&quot; alt=&quot;KICKZ Dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And just as the normal test teams do, these tests should also evolve and become more and more adapted to the site, it’s functionality and its users. Whenever we have a real problem or bug out there, we have to make sure that our WeightWatcher will find it in case it should appear or happen again.&lt;/p&gt;

&lt;p&gt;How could we start to build such a tool? Some thoughts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We have agents and a central server. The agents are located all around the globe or in different networks (think of little Docker images that run on different clouds). They report all their captured data to the central server. This is where the reports are generated and where interactive explication of the data is provided.&lt;/li&gt;
  &lt;li&gt;The agents start collecting simple metrics:
    &lt;ul&gt;
      &lt;li&gt;No of HTTP requests per page&lt;/li&gt;
      &lt;li&gt;Data transferred per page&lt;/li&gt;
      &lt;li&gt;No of lines of JavaScript per page&lt;/li&gt;
      &lt;li&gt;Time to load the data&lt;/li&gt;
      &lt;li&gt;Time to execute JavaScript&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Based on this we start with simple reports:
    &lt;ul&gt;
      &lt;li&gt;What’s the average page size?&lt;/li&gt;
      &lt;li&gt;What’s the average no of requests per page?&lt;/li&gt;
      &lt;li&gt;What are my &lt;em&gt;heaviest&lt;/em&gt; pages?&lt;/li&gt;
      &lt;li&gt;A graph that shows availability of my site as well as load time over a 24h scale, a week scale, a month. May be my users only experience slow loading in the evenings.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From there we we extend the data we collect as well as the reports.&lt;/p&gt;

&lt;p&gt;Such a tool would be great to monitor sites that I am in charge of (I.e. websites that we have developed at mgm) but could also give valuable information about other market players. It could be used both by technical people as well as the marketing guys - since they also &lt;em&gt;sometimes&lt;/em&gt; break performance ;) I would be curious to see this kind of stats for Zalando ;)&lt;/p&gt;

&lt;p&gt;Does anyone know about such a monitoring system? Please let me know till(dot)gartner(at)gmail(dot)com.&lt;/p&gt;</content><author><name>Till Gartner</name></author><category term="SoftwareWeNeed" /><summary type="html">Good software developers test their stuff. And the TDD (Test Driven Development) addicts are maniacs when it comes to testing. Those guys usually think in code, be it Java, Python, nodeJS, you name it. TDD means you write tests first, then you code just as much as it takes to let the tests become green. Then you rework your code and only then you start writing tests for new requirements. This is very testy. My opinion is that if you do it the way it’s written and described in the books you become awfully slow and it turns into nonsense. But that’s another discussion, and not one I want to sort out here… What’s missing with most of the test approaches I have seen in the past are the following two things: The test guys and test tools stop monitoring the software or website once it went into production. Somehow they feel that their responsibility ends with the going live… They test the software. Not the rest, I.e. The design, the HTML, the CSS etc. And the user experience, the feeling wether what I see, touch, browse navigate is of good quality, is very much influenced by this packaging of the software logic. So I am looking for a tool to test (web based) software once it’s out in the wild and throughout the entire user experience. Imagine a website, a simple blog. It might be perfect when it got launched, but over time it just degrades: the designers have added so many bells and whistles, the volume of the content has grown, it was tweaked to be more useable on mobiles… And eventually the site is bloated, heavy and slow. Why do I have to wait for my users to tell me (that would be complaining)? At mgm technology partners we have automated test suites that run every night. So developers that built in code that slows down the software have a report that tells them every morning in their inbox. So here is what my SiteWeightWatcher should do: Run tests every 5-30 minutes against the production site Check all the pages, not just index.html Report immediately when pages become slow (that would be slower than they used to be) Track key figures and how they evolve over time: How much data is transferred for each page? How many requests are going back &amp;amp; forth? How much time does it take searching for products? Over time… How well connected is the site for users in Germany, UK, US or Asia? Over time, because those things change without us having done anything. I could imagine a dashboard for an online shop like KICKZ.com to look may this way: And just as the normal test teams do, these tests should also evolve and become more and more adapted to the site, it’s functionality and its users. Whenever we have a real problem or bug out there, we have to make sure that our WeightWatcher will find it in case it should appear or happen again. How could we start to build such a tool? Some thoughts: We have agents and a central server. The agents are located all around the globe or in different networks (think of little Docker images that run on different clouds). They report all their captured data to the central server. This is where the reports are generated and where interactive explication of the data is provided. The agents start collecting simple metrics: No of HTTP requests per page Data transferred per page No of lines of JavaScript per page Time to load the data Time to execute JavaScript Based on this we start with simple reports: What’s the average page size? What’s the average no of requests per page? What are my heaviest pages? A graph that shows availability of my site as well as load time over a 24h scale, a week scale, a month. May be my users only experience slow loading in the evenings. From there we we extend the data we collect as well as the reports. Such a tool would be great to monitor sites that I am in charge of (I.e. websites that we have developed at mgm) but could also give valuable information about other market players. It could be used both by technical people as well as the marketing guys - since they also sometimes break performance ;) I would be curious to see this kind of stats for Zalando ;) Does anyone know about such a monitoring system? Please let me know till(dot)gartner(at)gmail(dot)com.</summary></entry><entry><title type="html">Beautiful websites</title><link href="http://0.0.0.0:4000/tech/2015/12/26/beautiful-sites.html" rel="alternate" type="text/html" title="Beautiful websites" /><published>2015-12-26T00:00:00+07:00</published><updated>2015-12-26T00:00:00+07:00</updated><id>http://0.0.0.0:4000/tech/2015/12/26/beautiful-sites</id><content type="html" xml:base="http://0.0.0.0:4000/tech/2015/12/26/beautiful-sites.html">&lt;p&gt;Since I always Have in mind that my site needs a proper design, I need a place to keep track of beautiful sites or at least sites where I like the design. So this is the home of those URLs&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jason.pureconcepts.net/&quot;&gt;Jason McCreary’s blog&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Large fonts&lt;/li&gt;
      &lt;li&gt;Good for text based entries as well as pictures&lt;/li&gt;
      &lt;li&gt;Simple navigation&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://alexcican.com/&quot;&gt;Alex Cinan&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Large fonts&lt;/li&gt;
      &lt;li&gt;BIG pictures with the cool paralax effect&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Till Gartner</name></author><category term="[&quot;tech&quot;]" /><summary type="html">Since I always Have in mind that my site needs a proper design, I need a place to keep track of beautiful sites or at least sites where I like the design. So this is the home of those URLs Jason McCreary’s blog Large fonts Good for text based entries as well as pictures Simple navigation Alex Cinan Large fonts BIG pictures with the cool paralax effect</summary></entry><entry><title type="html">Adding Search to a static site</title><link href="http://0.0.0.0:4000/tech/2015/12/19/adding-search-to-static-site.html" rel="alternate" type="text/html" title="Adding Search to a static site" /><published>2015-12-19T00:00:00+07:00</published><updated>2015-12-19T00:00:00+07:00</updated><id>http://0.0.0.0:4000/tech/2015/12/19/adding-search-to-static-site</id><content type="html" xml:base="http://0.0.0.0:4000/tech/2015/12/19/adding-search-to-static-site.html">&lt;p&gt;So now I have a static site that is generated by jBake. So far so good. But what’s a site without a search? Search is a must. So how do we add search functionality to a static site? Easy: We use the search giants Custom Search functionality ;)&lt;/p&gt;

&lt;p&gt;These are the steps I took to get there:&lt;/p&gt;

&lt;h2 id=&quot;create-the-custom-search-engine&quot;&gt;Create the Custom Search Engine&lt;/h2&gt;
&lt;p&gt;Nothing easiere: Just go to the &lt;a href=&quot;http://www.google.com/cse&quot;&gt;Google CSE page&lt;/a&gt; and create it. The process is self explanatory: You need a name for your search engine, you tell it what content should be made available. In my case this would be all from &lt;a href=&quot;tillgartner.com&quot;&gt;tillgartner.com&lt;/a&gt; and that’s basically it. We will return at the end to this site in order to fine tune the look &amp;amp; feel of the results.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-12-19_search_engine/Custom_Search_-_Basic.jpg&quot; alt=&quot;Google CSE administration&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The one thing we need from here is the code in order to embed the search. You get this code by clicking the bitton “&lt;strong&gt;Get Code&lt;/strong&gt;”.&lt;/p&gt;

&lt;h2 id=&quot;add-the-search-field&quot;&gt;Add the search field&lt;/h2&gt;
&lt;p&gt;Next we need a search box on our pages. I want a search box on the top right of every page on the entire website. So I add it to the freemarker template that creates the menu.&lt;/p&gt;

&lt;p&gt;In my case the &lt;code class=&quot;highlighter-rouge&quot;&gt;menu.ftl&lt;/code&gt; looks something like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fixed&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;navbar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nav&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navbar navbar-default navbar-fixed-top&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navigation&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;container-fluid&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navbar-header&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navbar-toggle&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;collapse&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.navbar-collapse&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sr-only&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Toggle&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;navigation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;icon-bar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;icon-bar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;icon-bar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navbar-brand&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tillgartner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navbar-collapse collapse&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nav navbar-nav&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/recipe/recipe.html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Recipes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/about.html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;About&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;		  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;col-sm-3 col-md-3 pull-right&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		  	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;navbar-form&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;search&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/search.html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;input-group&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		    	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;form-control&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Search&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;q&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;input-group-btn&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		        	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btn btn-default&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;submit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                    	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;glyphicon glyphicon-search&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;					&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;		        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;		    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;		 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/form&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;		 &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&amp;lt;!--/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nav&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collapse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/nav&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; I fixed the code on my site and on the code above on 29.12.2015. The code for the button that appears when the width of the screen makes the menu collapse, was missing. Just in case you read this earlier and wonder why it’s different now…&lt;/p&gt;

&lt;p&gt;I found thatthe part of the menu and how it collapses wasn’t trivial. The best explanation I found was &lt;a href=&quot;https://bootstrapbay.com/blog/bootstrap-tutorial-navbar/&quot;&gt;this video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It’s standard Bootstrap menu jiggling. What’s special in our case is the &lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt; attribute in the form that links to the search result page (called &lt;code class=&quot;highlighter-rouge&quot;&gt;search.html&lt;/code&gt; in my case).&lt;/p&gt;

&lt;p&gt;The result is a neat little serach box on the top right corner:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2015-12-19_search_engine/search_box.jpg&quot; alt=&quot;Search box&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;search-result-page&quot;&gt;Search result page&lt;/h2&gt;
&lt;p&gt;Last but not least we need the search result page. This page will be called (i.e. linked to) from the search form we just made. It’s URL will be something like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://tillgartner.com/search.html?q=huhu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my case the search result page will hold &lt;strong&gt;only&lt;/strong&gt; the search result. In case the user wants to modify his search, he still has the ubiquitous search box on the top right corner.
The search result page will hold the code we copied when configuring the Custom Serach Engine. In my case the entire Markdown file looks like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Search&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;published&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;~~~~~~&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'XXX_Your_code:goes_here_XXX'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gcse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gcse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text/javascript'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gcse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gcse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https:'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https:'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'//www.google.com/cse/cse.js?cx='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gcse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gcse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchresults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Search&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/gcse:searchresults-only&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It took me a while to figure out how to tell markdown that this is pure HTML and that it should take it as such without transforming or quoting it. The solution was the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div markdown=&quot;0&quot;&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;p&gt;Some reading that helped me to find wy way:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create your own search engine at &lt;a href=&quot;http://www.google.com/cse&quot;&gt;http://www.google.com/cse&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;http://www.cambiaresearch.com/articles/84/how-to-integrate-a-google-custom-search-popup-in-a-bootstrap-navbar&lt;/li&gt;
  &lt;li&gt;https://developers.google.com/custom-search/docs/tutorial/implementingsearchbox&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Till Gartner</name></author><category term="tech" /><summary type="html">So now I have a static site that is generated by jBake. So far so good. But what’s a site without a search? Search is a must. So how do we add search functionality to a static site? Easy: We use the search giants Custom Search functionality ;) These are the steps I took to get there: Create the Custom Search Engine Nothing easiere: Just go to the Google CSE page and create it. The process is self explanatory: You need a name for your search engine, you tell it what content should be made available. In my case this would be all from tillgartner.com and that’s basically it. We will return at the end to this site in order to fine tune the look &amp;amp; feel of the results. The one thing we need from here is the code in order to embed the search. You get this code by clicking the bitton “Get Code”. Add the search field Next we need a search box on our pages. I want a search box on the top right of every page on the entire website. So I add it to the freemarker template that creates the menu. In my case the menu.ftl looks something like this: &amp;lt;!-- Fixed navbar --&amp;gt; &amp;lt;nav class=&quot;navbar navbar-default navbar-fixed-top&quot; role=&quot;navigation&quot;&amp;gt; &amp;lt;div class=&quot;container-fluid&quot;&amp;gt; &amp;lt;div class=&quot;navbar-header&quot;&amp;gt; &amp;lt;button type=&quot;button&quot; class=&quot;navbar-toggle&quot; data-toggle=&quot;collapse&quot; data-target=&quot;.navbar-collapse&quot;&amp;gt; &amp;lt;span class=&quot;sr-only&quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;icon-bar&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/button&amp;gt; &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;/&quot;&amp;gt;tillgartner.com&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&quot;navbar-collapse collapse&quot;&amp;gt; &amp;lt;ul class=&quot;nav navbar-nav&quot;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;/recipe/recipe.html&quot;&amp;gt;Recipes&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&quot;/about.html&quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;div class=&quot;col-sm-3 col-md-3 pull-right&quot;&amp;gt; &amp;lt;form class=&quot;navbar-form&quot; role=&quot;search&quot; action=&quot;/search.html&quot;&amp;gt; &amp;lt;div class=&quot;input-group&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot; name=&quot;q&quot;&amp;gt; &amp;lt;div class=&quot;input-group-btn&quot;&amp;gt; &amp;lt;button class=&quot;btn btn-default&quot; type=&quot;submit&quot;&amp;gt; &amp;lt;i class=&quot;glyphicon glyphicon-search&quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;!--/.nav-collapse --&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/nav&amp;gt; &amp;lt;div class=&quot;container&quot;&amp;gt; Note: I fixed the code on my site and on the code above on 29.12.2015. The code for the button that appears when the width of the screen makes the menu collapse, was missing. Just in case you read this earlier and wonder why it’s different now… I found thatthe part of the menu and how it collapses wasn’t trivial. The best explanation I found was this video. It’s standard Bootstrap menu jiggling. What’s special in our case is the action attribute in the form that links to the search result page (called search.html in my case). The result is a neat little serach box on the top right corner: Search result page Last but not least we need the search result page. This page will be called (i.e. linked to) from the search form we just made. It’s URL will be something like http://tillgartner.com/search.html?q=huhu In my case the search result page will hold only the search result. In case the user wants to modify his search, he still has the ubiquitous search box on the top right corner. The search result page will hold the code we copied when configuring the Custom Serach Engine. In my case the entire Markdown file looks like this: title=Search type=page date=2015-12-17 status=published ~~~~~~ &amp;lt;script&amp;gt; (function() { var cx = 'XXX_Your_code:goes_here_XXX'; var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true; gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s); })(); &amp;lt;/script&amp;gt; &amp;lt;div markdown = &quot;0&quot;&amp;gt;&amp;lt;gcse:searchresults-only&amp;gt;Search results...&amp;lt;/gcse:searchresults-only&amp;gt;&amp;lt;/div&amp;gt; It took me a while to figure out how to tell markdown that this is pure HTML and that it should take it as such without transforming or quoting it. The solution was the &amp;lt;div markdown=&quot;0&quot;&amp;gt; tag. Resources Some reading that helped me to find wy way: Create your own search engine at http://www.google.com/cse http://www.cambiaresearch.com/articles/84/how-to-integrate-a-google-custom-search-popup-in-a-bootstrap-navbar https://developers.google.com/custom-search/docs/tutorial/implementingsearchbox</summary></entry></feed>